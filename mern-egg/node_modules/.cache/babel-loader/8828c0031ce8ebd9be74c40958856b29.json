{"ast":null,"code":"var _jsxFileName = \"/Users/tyleryoun/Desktop/PROJECT/mern-egg/src/components/timer.component.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: this.props.count\n    };\n  }\n\n  render() {\n    const {\n      count\n    } = this.state;\n    Math.floor((new Date(count).getTime() - new Date().getTime()) / 1000);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" Test timer: \", count, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }, this);\n  }\n\n  componentDidMount() {\n    this.myInterval = setInterval(() => {\n      this.setState(prevState => ({\n        count: this.state.count - 1\n      }), () => {\n        if (this.state.count < 1) {\n          clearInterval(this.myInterval);\n        }\n      });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.myInterval);\n  }\n\n}","map":{"version":3,"sources":["/Users/tyleryoun/Desktop/PROJECT/mern-egg/src/components/timer.component.js"],"names":["React","Component","Timer","constructor","props","state","count","render","Math","floor","Date","getTime","componentDidMount","myInterval","setInterval","setState","prevState","clearInterval","componentWillUnmount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,eAAe,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AACzCE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE;AADT,KAAb;AAGH;;AAEJC,EAAAA,MAAM,GAAK;AACR,UAAM;AAACD,MAAAA;AAAD,QAAU,KAAKD,KAArB;AACIG,IAAAA,IAAI,CAACC,KAAL,CAAW,CAAC,IAAIC,IAAJ,CAASJ,KAAT,EAAgBK,OAAhB,KAA4B,IAAID,IAAJ,GAAWC,OAAX,EAA7B,IAAoD,IAA/D;AAEJ,wBACK;AAAA,6BACG;AAAA,oCAAkBL,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADL;AAKF;;AAEDM,EAAAA,iBAAiB,GAAE;AACf,SAAKC,UAAL,GAAkBC,WAAW,CAAC,MAAK;AAChC,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAACV,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA3B,OAAL,CAAvB,EAA4D,MAAI;AAC5D,YAAG,KAAKD,KAAL,CAAWC,KAAX,GAAkB,CAArB,EAAuB;AACnBW,UAAAA,aAAa,CAAC,KAAKJ,UAAN,CAAb;AACH;AACJ,OAJD;AAKF,KAN4B,EAM1B,IAN0B,CAA7B;AAOH;;AAEDK,EAAAA,oBAAoB,GAAE;AAClBD,IAAAA,aAAa,CAAC,KAAKJ,UAAN,CAAb;AACH;;AA/B2C","sourcesContent":["import React, { Component } from 'react';\n\nexport default class Timer extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            count: this.props.count\n        }\n    }\n\n render()   {\n    const {count} = this.state\n        Math.floor((new Date(count).getTime() - new Date().getTime())/(1000))\n\n    return (\n         <div>\n            <h1> Test timer: {count} </h1>\n         </div>\n     )\n }\n\n componentDidMount(){\n     this.myInterval = setInterval(()=> {\n        this.setState(prevState => ({count: this.state.count - 1}), ()=>{\n            if(this.state.count <1){\n                clearInterval(this.myInterval)\n            }\n        })\n     }, 1000)\n }\n\n componentWillUnmount(){\n     clearInterval(this.myInterval)\n }\n}\n\n"]},"metadata":{},"sourceType":"module"}